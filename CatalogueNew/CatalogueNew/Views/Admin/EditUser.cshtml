@model UserViewModels

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Customer</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.User.Id)

        <div class="form-group">
            <div class="col-md-offset-3">
                @Html.LabelFor(m => m.User.UserName, new { @class = "col-md-2 control-label" })
                @Html.TextBoxFor(m => m.User.UserName, new { @class = "form-control editUser" })
                @Html.ValidationMessageFor(m => m.User.UserName)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-3">
                @Html.LabelFor(m => m.User.Email, new { @class = "col-md-2 control-label" })
                @Html.TextBoxFor(m => m.User.Email, new { @class = "form-control editUser" })
                @Html.ValidationMessageFor(m => m.User.Email)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-3">
                @Html.LabelFor(m => m.User.FirstName, new { @class = "col-md-2 control-label" })
                @Html.TextBoxFor(m => m.User.FirstName, new { @class = "form-control editUser" })
                @Html.ValidationMessageFor(m => m.User.FirstName)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-3">
                @Html.LabelFor(m => m.User.LastName, new { @class = "col-md-2 control-label" })
                @Html.TextBoxFor(m => m.User.LastName, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-3">
                @Html.LabelFor(m => m.User.Gender, new { @class = "col-md-2 control-label" })
                <div class="input-group">
                    <div id="radioBtn" class="btn-group">

                        @if (Model.User.Gender.HasValue)
                        {
                            if (Model.User.Gender.Value == GenderType.Female)
                            {
                                <a class="btn btn-danger btn-sm active" name="female" id="female" data-toggle="gender" data-title="female">Female</a>
                                <a class="btn btn-default btn-sm notActive" name="male" id="male" data-toggle="gender" data-title="male">Male</a>
                            }
                            else
                            {
                                <a class="btn btn-default btn-sm notActive" name="female" id="female" data-toggle="gender" data-title="female">Female</a>
                                <a class="btn btn-primary btn-sm active" name="male" id="male" data-toggle="gender" data-title="male">Male</a>
                            }
                        }
                        else
                        {
                            <a class="btn btn-default btn-sm notActive" name="female" id="female" data-toggle="gender" data-title="female">Female</a>
                            <a class="btn btn-default btn-sm notActive" name="male" id="male" data-toggle="gender" data-title="male">Male</a>
                        }

                    </div>
                    <input type="hidden" name="User.Gender" id="gender">
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-3">
                @Html.LabelFor(m => m.User.BirthDate, new { @class = "col-md-2 control-label" })
                <div class="form-group input-group-sm">

                    @if (Model.User.BirthDate.HasValue)
                    {
                        string stringFormat = Model.User.BirthDate.ToString().Substring(0, 9);
                        <input type="hidden" hidden id="stringFormat" value="@stringFormat" />
                        @Html.TextBoxFor(model => model.User.BirthDate, new { @class = "form-control datepicker", placeholder = stringFormat, @Value = stringFormat })
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.User.BirthDate, new { @class = "form-control datepicker", placeholder = "Enter Drop-off date here..." })
                    }

                    @Html.ValidationMessageFor(model => model.User.BirthDate)
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-3">
                @Html.Label("Roles", new { @class = "col-md-2 control-label" })
                <span class="button-checkbox">
                    <button type="button" class="btn" data-color="primary">Admin</button>

                    @if (Model.UserRole.IsAdmin)
                    {
                        <input type="checkbox" class="hidden" name="admin" id="admin" checked />
                    }
                    else
                    {
                        <input type="checkbox" class="hidden" name="admin" id="admin" />
                    }

                </span>
                <span class="button-checkbox">
                    <button type="button" class="btn" data-color="primary">Manager</button>

                    @if (Model.UserRole.IsManager)
                    {
                        <input type="checkbox" class="hidden" name="manager" id="manager" checked />
                    }
                    else
                    {
                        <input type="checkbox" class="hidden" name="manager" id="manager" />
                    }

                </span>
                <span class="button-checkbox">
                    <button type="button" class="btn" data-color="primary">Moderator</button>

                    @if (Model.UserRole.IsModerator)
                    {
                        <input type="checkbox" class="hidden" name="moderator" id="moderator" checked />
                    }
                    else
                    {
                        <input type="checkbox" class="hidden" name="moderator" id="moderator" />
                    }

                </span>
            </div>
        </div><br />

        <div class="form-group">
            <div class="col-md-offset-6">
                <input type="submit" value="Save" class="btn btn-success" />
                @Html.ActionLink("Back to List", "Users", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}

@section Scripts {
    <link href="~/Content/bootstrap-datepicker.css" rel="stylesheet" />
    @Scripts.Render("~/bundles/input.js")
    @Scripts.Render("~/bundles/editUser")
    <script type="text/javascript">
        $(function () {
            var $strFormat = $('#stringFormat').val();
            var $datePicker = $('.datepicker');
            $datePicker.datepicker();
            $datePicker.val($strFormat);
        });
    </script>
}