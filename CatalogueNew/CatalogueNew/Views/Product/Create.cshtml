@model CatalogueNew.Web.Models.ProductViewModel

@{if (Model.Product.ProductID == null)
{
    ViewBag.Title = "Create product";
}
else
{
    ViewBag.Title = "Edit: " + Model.Product.Name;
}
}
@Scripts.Render("~/bundles/dropzonescripts");
<h2>@ViewBag.Title</h2>
@{ if (User.IsInRole("Manager"))
 {
     using (Html.BeginForm(new { id = Model.Product.ProductID }))
     {
        <div class="col-md-offset-4 form-horizontal">

            <div class="form-group">
                All fields marked with <span class="required">*</span> are required!
            </div>

            <div class="form-group">
                <label for="@Html.IdFor(model => model.Product.Name)">Name <span class="required">*</span></label>
                @Html.TextBoxFor(model => model.Product.Name, new { @class="form-control", placeholder="Enter product name", required="required"})
            </div>

            <div class="form-group">
                <label for="@Html.IdFor(model => model.Product.CategoryID)">Category <span class="required">*</span></label>
                @Html.DropDownListFor(model => model.Product.CategoryID, Model.Categories, "Select category", new { @class = "form-control", required = "required" })
            </div>
            <div class="form-group">
                <label for="@Html.IdFor(model => model.Product.ManufacturerID)">Manufacturer <span class="required">*</span></label>
                @Html.DropDownListFor(model => model.Product.ManufacturerID, Model.Manufacturers, "Select manufacturer", new { @class = "form-control", required = "required" })
            </div>
            <div class="form-group">
                <label for="@Html.IdFor(model => model.Product.Year)">Year <span class="required">*</span></label>
                <select name="@Html.NameFor(model => model.Product.Year)" id="@Html.IdFor(model => model.Product.Year)"
                        class="form-control" required>
                    @{
         if (Model.Product.Year == null)
         {
            <option value="" disabled selected>Select year</option>
         }

         int year = DateTime.Now.Year;
         for (int i = year + 1; i > year - 21; i--)
         {
             if (i == Model.Product.Year)
             {
                <option value="@i" selected>@i</option>
             }
             else
             {
                <option value="@i">@i</option>
             }
         }
                    }
                </select>
            </div>
            <div class="form-group">
                <label for="@Html.IdFor(model => model.Product.Description)">Description <span class="required">*</span></label>
                @Html.TextAreaFor(model => model.Product.Description, new { @class="form-control", rows="5", required="required", maxlenght="1000"})
                </div>
                @{
         if (Model.Product.ProductID == null)
         {
            <input type="submit" class="btn btn-success" value="Create product" />
         }
         else
         {
            <input type="submit" class="btn btn-success" value="Save product" />
                    @Html.ActionLink("Cancel", "Index", "Home", null, new { @class = "btn btn-default" })
         }
                }
            
            </div>
     }
    <div class="jumbotron">
        <form action="~/Product/SaveUploadedFile" method="post" enctype="multipart/form-data" class="dropzone" id="dropzoneForm">
            <div class="fallback">
                <input name="file" type="file" multiple />
                <input type="submit" value="Upload" />
            </div>
        </form>
        <br />
        <button id="submit-all" class="btn btn-success">Submit all files</button>
    </div>
    <style type="text/css">
        .dz-max-files-reached {
            background-color: red;
        }
    </style>
    @section scripts{
        <script type="text/javascript">

            //File Upload response from the server
            Dropzone.options.dropzoneForm = {
                autoProcessQueue: false,
                maxFiles: 6,
                init: function () {
                    this.on("maxfilesexceeded", function (data) {
                        var res = eval('(' + data.xhr.responseText + ')');

                    });
                    this.on("addedfile", function (file) {

                        // Create the remove button
                        var removeButton = Dropzone.createElement("<button>Remove file</button>");

                        // Capture the Dropzone instance as closure.
                        var _this = this;

                        // Listen to the click event
                        removeButton.addEventListener("click", function (e) {
                            // Make sure the button click doesn't submit the form:
                            e.preventDefault();
                            e.stopPropagation();
                            // Remove the file preview.
                            _this.removeFile(file);
                            // If you want to the delete the file on the server as well,
                            // you can do the AJAX request here.
                        });

                        var submitButton = document.querySelector("#submit-all")
                        myDropzone = this; // closure

                        submitButton.addEventListener("click", function () {
                            myDropzone.processQueue(); // Tell Dropzone to process all queued files.
                        });

                        // You might want to show the submit button only when
                        // files are dropped here:
                        this.on("addedfile", function () {
                            $.getJSON(@Url.Action("SaveUploadedFile", "Product"))
                        });
                        // Add the button to the file preview element.
                        file.previewElement.appendChild(removeButton);
                    });
                }
            };
        </script>
    }
 }
   else
   {
    <div class="row alert alert-danger">
        <p class="text-center">You are not authorized to create or edit products!</p>
    </div>
 }
}