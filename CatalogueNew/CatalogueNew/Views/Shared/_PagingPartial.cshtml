﻿@model PagingViewModel

<div class="row text-center">
    <nav>
        <ul class="pagination">

            <li><a @(Model.Page > 1 ? "" : "class=btn disabled") href="@Url.Action(Model.Path, new { page = 1, id = Model.Id })">First</a></li>
            <li><a @(Model.Page > 1 ? "" : "class=btn disabled") href="@Url.Action(Model.Path, new { page = Model.Page - 1, id = Model.Id })">Previous</a></li>

            @for (int i = Model.FirstPage; i <= (Model.FirstPage + Model.PagesDisplayed); i++)
            {
                if (Model.Page == i)
                {
                    <li class="active"><a href="@Url.Action(Model.Path, new { page = i })">@i</a></li>
                }
                else
                {
                    <li><a href="@Url.Action(Model.Path, new { page = i })">@i</a></li>
                }
            }

            <li><a @(Model.Page < Model.Count ? "" : "class=btn disabled") href="@Url.Action(Model.Path, new { page = Model.Page + 1, id = Model.Id })">Next</a></li>
            <li><a @(Model.Page < Model.Count ? "" : "class=btn disabled") href="@Url.Action(Model.Path, new { page = Model.Count, id = Model.Id })">Last</a></li>

        </ul>
        <h6 class="text-muted">Showing @Model.Page of @Model.Count</h6>
    </nav>
</div>
